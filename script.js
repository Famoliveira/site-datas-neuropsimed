document.addEventListener('DOMContentLoaded', function() {
    // Dados dos eventos
    const specificDates = [
        // MAR√áO
        { month: 'Mar√ßo', day: 8, title: 'Dia Internacional da Mulher', description: 'Um dia para celebrar as conquistas femininas e refor√ßar a import√¢ncia do cuidado com a sa√∫de mental das mulheres.', emoji: '‚ú®' },
        { month: 'Mar√ßo', day: 21, title: 'Dia Internacional da S√≠ndrome de Down', description: 'Momento para conscientizar sobre a condi√ß√£o e promover a inclus√£o e respeito √†s pessoas com S√≠ndrome de Down.', emoji: 'üåà' },
        { month: 'Mar√ßo', day: 24, title: 'Dia Nacional de Combate √† Tuberculose', description: 'Data para informar sobre preven√ß√£o e tratamento, destacando a import√¢ncia do acompanhamento psicol√≥gico durante doen√ßas cr√¥nicas.', emoji: 'üó£Ô∏è' },
        
        // ABRIL
        { month: 'Abril', day: 2, title: 'Dia Mundial de Conscientiza√ß√£o do Autismo', description: 'Data para promover a inclus√£o e o respeito √†s pessoas com TEA, destacando a import√¢ncia do diagn√≥stico e suporte adequado.', emoji: 'üß©' },
        { month: 'Abril', day: 7, title: 'Dia Mundial da Sa√∫de', description: 'Oportunidade para enfatizar a conex√£o entre sa√∫de f√≠sica e mental, promovendo abordagens integrativas.', emoji: 'üèÉ' },
        
        // MAIO
        { month: 'Maio', day: 8, title: 'Dia Nacional de Combate ao Estresse', description: 'Data para compartilhar t√©cnicas de manejo do estresse e promover a import√¢ncia do equil√≠brio na vida cotidiana.', emoji: '‚ù§Ô∏è' },
        { month: 'Maio', day: 17, title: 'Dia Internacional de Combate √† Homofobia', description: 'Data para discutir o impacto da discrimina√ß√£o na sa√∫de mental e a import√¢ncia da aceita√ß√£o.', emoji: 'üß†' },
        
        // JULHO
        { month: 'Julho', day: 27, title: 'Dia do Psic√≥logo', description: 'Celebra√ß√£o da profiss√£o e sua import√¢ncia para a sa√∫de mental da sociedade.', emoji: 'üë®‚Äç‚öïÔ∏è' },
        
        // AGOSTO
        { month: 'Agosto', day: 11, title: 'Dia do Nutricionista', description: 'Data para destacar a rela√ß√£o entre alimenta√ß√£o saud√°vel e bem-estar emocional.', emoji: 'üß†' },
        
        // SETEMBRO
        { month: 'Setembro', day: 10, title: 'Dia Mundial de Preven√ß√£o ao Suic√≠dio', description: 'Data crucial para campanha de conscientiza√ß√£o, preven√ß√£o e combate ao estigma relacionado √† sa√∫de mental.', emoji: 'üíõ' },
        { month: 'Setembro', day: 21, title: 'Dia Mundial da Doen√ßa de Alzheimer', description: 'Momento para informar sobre a doen√ßa e a import√¢ncia do suporte psicol√≥gico aos pacientes e familiares.', emoji: 'üß†' },
        
        // OUTUBRO
        { month: 'Outubro', day: 10, title: 'Dia Mundial da Sa√∫de Mental', description: 'Momento para refor√ßar a import√¢ncia do bem-estar emocional e psicol√≥gico, incentivando a preven√ß√£o e os cuidados com a sa√∫de mental.', emoji: 'üëß' },
        { month: 'Outubro', day: 16, title: 'Dia Mundial da Alimenta√ß√£o', description: 'Oportunidade para destacar a rela√ß√£o entre nutri√ß√£o adequada e sa√∫de mental.', emoji: 'üë¶' },
        
        // NOVEMBRO
        { month: 'Novembro', day: 14, title: 'Dia Mundial do Diabetes', description: 'Data para abordar o impacto emocional de doen√ßas cr√¥nicas e estrat√©gias de enfrentamento.', emoji: 'üó£Ô∏è' },
        { month: 'Novembro', day: 20, title: 'Dia Nacional de Zumbi e da Consci√™ncia Negra', description: 'Momento para discutir os impactos do racismo na sa√∫de mental e promover o bem-estar da popula√ß√£o negra.', emoji: 'üë®' },
        
        // DEZEMBRO
        { month: 'Dezembro', day: 3, title: 'Dia Internacional das Pessoas com Defici√™ncia', description: 'Data para promover a inclus√£o e abordar aspectos psicol√≥gicos relacionados √†s pessoas com defici√™ncia.', emoji: '‚ôø' },
        { month: 'Dezembro', day: 10, title: 'Dia Internacional dos Direitos Humanos', description: 'Oportunidade para discutir como o acesso √† sa√∫de mental √© um direito humano fundamental.', emoji: 'üíó' }
    ];

    const monthlyCampaigns = [
        { month: 'Mar√ßo', title: 'Mar√ßo Azul', description: 'Preven√ß√£o e combate ao c√¢ncer colorretal', color: '#1e88e5', emoji: 'üíô' },
        { month: 'Mar√ßo', title: 'Mar√ßo Lil√°s', description: 'Conscientiza√ß√£o sobre c√¢ncer de colo do √∫tero', color: '#9c27b0', emoji: 'üíú' },
        { month: 'Abril', title: 'Abril Azul', description: 'M√™s de Conscientiza√ß√£o do Autismo', color: '#2196f3', emoji: 'üß©üíô' },
        { month: 'Maio', title: 'Maio Amarelo', description: 'Aten√ß√£o ao tr√¢nsito e preven√ß√£o de acidentes', color: '#ffd600', emoji: 'üö¶üíõ' },
        { month: 'Maio', title: 'Maio Vermelho', description: 'Combate √† hepatite', color: '#f44336', emoji: '‚ù§Ô∏è' },
        { month: 'Junho', title: 'Junho Vermelho', description: 'Incentivo √† doa√ß√£o de sangue', color: '#e53935', emoji: '‚ù§Ô∏è' },
        { month: 'Junho', title: 'Junho Laranja', description: 'Conscientiza√ß√£o sobre anemia e leucemia', color: '#ff9800', emoji: 'üß°' },
        { month: 'Julho', title: 'Julho Amarelo', description: 'Conscientiza√ß√£o sobre hepatites virais', color: '#ffeb3b', emoji: 'üíõ' },
        { month: 'Julho', title: 'Julho Verde', description: 'Combate ao c√¢ncer √≥sseo', color: '#4caf50', emoji: 'üíö' },
        { month: 'Agosto', title: 'Agosto Dourado', description: 'Incentivo ao aleitamento materno', color: '#ffc107', emoji: 'ü•á' },
        { month: 'Setembro', title: 'Setembro Amarelo', description: 'Preven√ß√£o ao suic√≠dio e valoriza√ß√£o da vida', color: '#ffeb3b', emoji: 'üíõ' },
        { month: 'Setembro', title: 'Setembro Verde', description: 'Conscientiza√ß√£o sobre doa√ß√£o de √≥rg√£os', color: '#4caf50', emoji: 'üíö' },
        { month: 'Outubro', title: 'Outubro Rosa', description: 'Preven√ß√£o do c√¢ncer de mama', color: '#e91e63', emoji: 'üéÄ' },
        { month: 'Novembro', title: 'Novembro Azul', description: 'Conscientiza√ß√£o sobre a sa√∫de do homem', color: '#1976d2', emoji: 'üíô' },
        { month: 'Novembro', title: 'Novembro Roxo', description: 'Conscientiza√ß√£o sobre a prematuridade', color: '#9c27b0', emoji: 'üíú' },
        { month: 'Dezembro', title: 'Dezembro Vermelho', description: 'Combate ao HIV/AIDS', color: '#f44336', emoji: '‚ù§Ô∏è' },
        { month: 'Dezembro', title: 'Dezembro Laranja', description: 'Combate ao c√¢ncer de pele', color: '#ff9800', emoji: 'üß°' }
    ];

    // Atualizar para pegar a data REAL do sistema
    const currentDate = new Date(); // Data atual do usu√°rio
    const currentYear = 2025; // Ano fixo para os eventos (calend√°rio 2025)

    // Atualizar a exibi√ß√£o da data atual
    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
    const todayElement = document.getElementById('today-date');
    
    // Formatar com ano fixo 2025 mantendo o dia/m√™s atual
    const todayForDisplay = new Date(currentYear, currentDate.getMonth(), currentDate.getDate());
    todayElement.textContent = todayForDisplay.toLocaleDateString('pt-BR', options);

    function compareDates(date1, date2) {
        return (
            date1.getFullYear() === date2.getFullYear() &&
            date1.getMonth() === date2.getMonth() &&
            date1.getDate() === date2.getDate()
        );
    }

    // Fun√ß√£o para criar datas dos eventos sempre em 2025
    function getEventDate(event) {
        const monthMap = {
            'Janeiro': 0, 'Fevereiro': 1, 'Mar√ßo': 2, 'Abril': 3,
            'Maio': 4, 'Junho': 5, 'Julho': 6, 'Agosto': 7,
            'Setembro': 8, 'Outubro': 9, 'Novembro': 10, 'Dezembro': 11
        };
        return new Date(currentYear, monthMap[event.month], event.day);
    }

    // Data de compara√ß√£o (usando ano 2025 com m√™s/dia atual)
    const comparisonDate = new Date(currentYear, currentDate.getMonth(), currentDate.getDate());

    // Ordenar e filtrar eventos
    const sortedEvents = [...specificDates].sort((a, b) => getEventDate(a) - getEventDate(b));
    const upcomingEvents = sortedEvents.filter(event => getEventDate(event) >= comparisonDate).slice(0, 3);
    const upcomingEventsContainer = document.getElementById('upcoming-events-container');
    upcomingEventsContainer.innerHTML = '';

    if (upcomingEvents.length > 0) {
        upcomingEvents.forEach(event => {
            const eventDate = getEventDate(event);
            const formattedDate = eventDate.toLocaleDateString('pt-BR', { day: 'numeric', month: 'long' });
            const eventCard = document.createElement('div');
            eventCard.className = 'event-card';
            eventCard.innerHTML = `
                <div class="event-date">${event.emoji} ${formattedDate}</div>
                <div class="event-title">${event.title}</div>
                <div class="event-description">${event.description}</div>
            `;
            upcomingEventsContainer.appendChild(eventCard);
        });
    } else {
        upcomingEventsContainer.innerHTML = '<p>Nenhum evento pr√≥ximo encontrado.</p>';
    }

    const eventsByMonth = {};
    specificDates.forEach(event => {
        if (!eventsByMonth[event.month]) {
            eventsByMonth[event.month] = [];
        }
        eventsByMonth[event.month].push(event);
    });

    const specificDatesGrid = document.getElementById('specific-dates-grid');
    specificDatesGrid.innerHTML = '';
    for (const month in eventsByMonth) {
        const monthCard = document.createElement('div');
        monthCard.className = 'month-card';
        let monthHTML = `<h4>${month}</h4><ul class="month-card-events">`;
        eventsByMonth[month].forEach(event => {
            monthHTML += `
                <li>
                    <span class="event-day">${event.day}</span>
                    ${event.title} ${event.emoji}
                </li>
            `;
        });
        monthHTML += '</ul>';
        monthCard.innerHTML = monthHTML;
        specificDatesGrid.appendChild(monthCard);
    }

    const campaignsByMonth = {};
    monthlyCampaigns.forEach(campaign => {
        if (!campaignsByMonth[campaign.month]) {
            campaignsByMonth[campaign.month] = [];
        }
        campaignsByMonth[campaign.month].push(campaign);
    });

    const campaignsGrid = document.getElementById('monthly-campaigns-list');
    campaignsGrid.innerHTML = '';
    for (const month in campaignsByMonth) {
        campaignsByMonth[month].forEach(campaign => {
            const campaignCard = document.createElement('div');
            campaignCard.className = 'campaign-card';
            campaignCard.style.borderLeftColor = campaign.color;
            campaignCard.innerHTML = `
                <div class="campaign-title">
                    <span>${campaign.emoji}</span>
                    <h4>${campaign.title}</h4>
                </div>
                <div class="campaign-description">${campaign.description}</div>
            `;
            campaignsGrid.appendChild(campaignCard);
        });
    }

    // Gerenciar navega√ß√£o das abas internas (Datas e Campanhas)
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            tabButtons.forEach(btn => btn.classList.remove('active'));
            tabContents.forEach(content => content.classList.remove('active'));
            button.classList.add('active');
            const tabId = button.getAttribute('data-tab');
            document.getElementById(tabId).classList.add('active');
        });
    });

    // Gerenciar navega√ß√£o principal (Calend√°rio e Sobre N√≥s)
    const navLinks = document.querySelectorAll('.nav-link');
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            // Se for um link externo (como Contato), n√£o faz o toggle
            if (this.getAttribute('href') !== '#') return;
            e.preventDefault();
            navLinks.forEach(l => l.classList.remove('active'));
            this.classList.add('active');
            // Esconde todas as se√ß√µes de main
            document.querySelectorAll('main > section').forEach(section => section.style.display = 'none');
            // Exibe a se√ß√£o alvo
            const target = this.getAttribute('data-target');
            document.getElementById(target).style.display = 'block';
        });
    });

    // Atualizar hover dos cards para melhor feedback
    document.querySelectorAll('.event-card, .month-card, .campaign-card').forEach(card => {
        card.style.cursor = 'pointer';
        card.addEventListener('click', () => {
            card.style.transform = 'scale(0.98)';
            setTimeout(() => {
                card.style.transform = '';
            }, 200);
        });
    });

    // Adicionar efeito de pesquisa em tempo real
    document.getElementById('event-search').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        document.querySelectorAll('.month-card').forEach(monthCard => {
            const events = monthCard.querySelectorAll('li');
            let hasVisible = false;
            
            events.forEach(event => {
                const text = event.textContent.toLowerCase();
                event.style.display = text.includes(searchTerm) ? 'block' : 'none';
                if (text.includes(searchTerm)) hasVisible = true;
            });

            monthCard.style.display = hasVisible ? 'block' : 'none';
        });
    });
});
